package djjy.filemange;

import android.annotation.SuppressLint;
import android.app.ProgressDialog;
import android.content.DialogInterface;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ImageButton;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.Toast;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;

import com.example.hsdj.MyApplication;
import com.example.hsdj.R;
import com.google.gson.Gson;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;
import utils.AccessKeyUtils;


public class FileActivity extends AppCompatActivity {
    private ImageButton btn_return;
    private ListView file_list_view;

    public static final MediaType JSON = MediaType.parse("application/json; charset=utf-8");

    //多条文件标题
    private List<HashMap<String, Object>> list_show = new ArrayList<HashMap<String, Object>>();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_file);
        btn_return = findViewById(R.id.btn_return);
        btn_return.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                //finish是取消当前页面
                finish();
            }
        });
        try {
            final ProgressDialog progressDialog = new ProgressDialog(FileActivity.this);
            progressDialog.setIndeterminate(true);
            progressDialog.setMessage("内容获取中...");
            progressDialog.show();
            /*查找党建资讯列表: 异步post请求*/
            MyApplication myApplication= (MyApplication) getApplication().getApplicationContext();
            String accessKey = AccessKeyUtils.getAccessKey(myApplication.getMenuApplication(), 54);
            String json="{\"businessJson\":{\"page\":1,\"rows\":10},\"controlJson\":{\"menuId\":54,\"opt\":\"c\",\"accessKey\":\""+accessKey+"\",\"token\":\""+myApplication.getToken()+"\",\"opt_desc\":\"文件获取\"}}";
            RequestBody body = RequestBody.create(JSON, json);
            Request request = new Request.Builder()
                    .url("http://58.51.240.150:8000/app/hsdj/xxjymgr/views/getFiles")
                    .post(body)
                    .build();
            OkHttpClient client = new OkHttpClient();
            Response response = client.newCall(request).execute();
//            StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
//            StrictMode.setThreadPolicy(policy);
//            OkHttpClient okHttpClient = new OkHttpClient();
//            //创建表单请求体
//            FormBody.Builder formBody = new FormBody.Builder();
//            Request okRequest = new Request.Builder().url("http://58.51.240.150:8000/app/hsdj/xxjymgr/views/getFiles").post(formBody.build()).build();
//            Response response = okHttpClient.newCall(okRequest).execute();
            /*json串和File对象数据绑定*/
            if (response.isSuccessful()) {
            Gson gson = new Gson();
            File b = gson.fromJson(response.body().string(), File.class);
            for (int i = 0; i < b.getData().getRows().size(); i++) {
                HashMap<String, Object> item = new HashMap<String, Object>();
                item.put("file_name", b.getData().getRows().get(i).getFile_name());
                item.put("file_type", b.getData().getRows().get(i).getFile_type());
                item.put("file_size", b.getData().getRows().get(i).getFile_size());
                item.put("file_path", (String) "http://58.51.240.150:8000/media/" + b.getData().getRows().get(i).getFile_path() +
                        "/" + b.getData().getRows().get(i).getFile_name() + "." + b.getData().getRows().get(i).getFile_type());
                list_show.add(item);
            }
                progressDialog.dismiss();
            }else{
                progressDialog.dismiss();
                Toast.makeText(myApplication, "资讯列表获取失败", Toast.LENGTH_SHORT).show();
                finish();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        initView();
    }

    @SuppressLint("WrongViewCast")
    private void initView() {
        SimpleAdapter adapter = new SimpleAdapter(this, list_show, R.layout.file,
                new String[]{"file_name", "file_type", "file_size"}, new int[]{R.id.file_name, R.id.file_type, R.id.file_size});
        //实现列表的显示
        file_list_view = findViewById(R.id.file_list_view);
        file_list_view.setAdapter(adapter);
        //条目点击事件V
        file_list_view.setOnItemClickListener(new FileActivity.ItemClickListener());

    }

    //获取点击事件
    private final class ItemClickListener implements AdapterView.OnItemClickListener {
        @SuppressLint("WrongConstant")
        public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
            onBackPressed();
        }
    }

    public void onBackPressed() {
        new AlertDialog.Builder(this).setTitle("确认下载吗？")
                .setIcon(android.R.drawable.ic_dialog_info)
                .setPositiveButton("确定", new DialogInterface.OnClickListener() {

                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        // 点击“确认”后的操作

                        //DownloadManager.Request request = new DownloadManager.Request(Uri.parse("下载地址"));

                        //设置文件存放目录
                       // request.setDestinationInExternalFilesDir(this, Environment.DIRECTORY_DOWNLOADS, "mydown");

                    }
                })
                .setNegativeButton("取消", new DialogInterface.OnClickListener() {

                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        // 点击“返回”后的操作,这里不设置没有任何操作
                    }
                }).show();
    }

}

package login;

import android.os.Bundle;
import android.os.Looper;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import com.example.hsdj.MyApplication;
import com.example.hsdj.R;
import com.google.gson.Gson;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.FormBody;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

public class LoginActivity extends AppCompatActivity {
    Button button1; //点击的LinearLayout
    private EditText et_data_uname;
    private EditText et_data_upass;
    private Map<String, String> stringHashMap = new HashMap<String, String>();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);
        MyApplication myApplication= (MyApplication) getApplication();

        button1= findViewById(R.id.button1);
        /*用户登录验证接口*/
        button1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                et_data_uname = (EditText) findViewById(R.id.et_data_uname);
                et_data_upass = (EditText) findViewById(R.id.et_data_upass);
                //创建OkHttpClient实例，主要用于请求网络
                OkHttpClient okHttpClient = new OkHttpClient();
                //创建表单请求体
                FormBody.Builder formBody = new FormBody.Builder();
                //传递键值对参数
                formBody.add("username",et_data_uname.getText().toString());
                formBody.add("userpwd",et_data_upass.getText().toString());
                //创建Request实例，设置POST参数
                Request okRequest = new Request.Builder().url("http://58.51.240.150:8000/app/hsdj/authmgr/views/userLogin").post(formBody.build()).build();
                //POST异步请求，回调函数中获取相应结果
                okHttpClient.newCall(okRequest).enqueue(new Callback() {
                    @Override
                    public void onFailure(Call call, IOException e) {
                        Looper.prepare();
                        Toast.makeText(getApplication(), "登录失败！", Toast.LENGTH_SHORT).show();
                        Looper.loop();
                    }
                    @Override
                    public void onResponse(Call call, Response response) throws IOException {
                        Looper.prepare();
                        try {
                            JSONObject jsonObject=new JSONObject(response.body().string());
                            if("OK".equalsIgnoreCase(jsonObject.optString("message"))){
                                Toast.makeText(getApplication(), "登录成功！", Toast.LENGTH_SHORT).show();
                            }else{
                                Toast.makeText(getApplication(), "用户名或密码错误！", Toast.LENGTH_SHORT).show();
                            }
                        } catch (JSONException e) {
                            e.printStackTrace();
                        }
                        Looper.loop();
                    }
                });

                /*用户个人信息接口*/
                new Thread(new Runnable(){
                    @Override
                    public void run() {
                        //创建OkHttpClient实例，主要用于请求网络
                        OkHttpClient okHttpClient1 = new OkHttpClient();
                        //创建Request实例，可以配置接口地址和请求头
                        Request okRequest1 = new Request.Builder().url("http://58.51.240.150:8000/app/hsdj/authmgr/views/getUsers?username="+et_data_uname.getText().toString()).build();
                        //GET请求，用Response接受相应结果
                        try {
                            Response response = okHttpClient1.newCall(okRequest1).execute();
                            Gson gson=new Gson();
                            UserInfo userInfo=gson.fromJson(response.body().string(),UserInfo.class);
                            /*保存用户全局变量信息*/
                            myApplication.setUsername(userInfo.getData().getRows().get(0).getUsername());
                            myApplication.setUserId(userInfo.getData().getRows().get(0).getId());
                            finish();
                        } catch (IOException e) {
                            e.printStackTrace();
                        }
                    }
                }).start();
            }
        });
    }
}